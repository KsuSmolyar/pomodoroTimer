import classNames from "classnames";
import { usePomodoroSettings } from "../../store/pomodoroSettingsStore/context";
import { usePomodoroTimerContext } from "../../store/pomodoroTimerStore/context";
import { modes } from "../../store/pomodoroTimerStore/types";
import styles from "./PomodoroTimer.module.css";
import { Button } from "../UI/Button";

export const PomodoroTimerControls = () => {
    const {store, actions} = usePomodoroTimerContext();
    const {settings} = usePomodoroSettings();

    return (
        <div className={styles.controls}>
            <Button
                className={styles.controlBtn}
                onClick={actions.toggle}
                label={store.isRunning ? <><span>‚è∏Ô∏è</span><span>–ü–∞—É–∑–∞</span></> : <><span>‚ñ∂Ô∏è</span><span>–°—Ç–∞—Ä—Ç</span></>}
            />  
            <Button
                className={styles.controlBtn}
                onClick={actions.reset}
                label={<><span>‚è≤Ô∏è</span><span>–°–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä</span></>}
            />
            <Button 
                className={styles.controlBtn}
                onClick={actions.resetCyclesCounter}
                disabled={store.isRunning}
                label={<><span>üî¢</span><span>–°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫</span></> }
            />
            <Button
                onClick={() =>actions.skipBreak(settings)}
                className={classNames(styles.skipBreak, styles.controlBtn, {[styles.active]: store.mode === modes.break})}
                label={<><span>üîÑÔ∏è</span><span>–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ—Ä—ã–≤</span></>}
            />
        </div>
    )
}
